plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.kidscurated.player'
    compileSdk 34

    defaultConfig {
        applicationId "com.kidscurated.player"
        minSdk 24
        targetSdk 34
        versionCode 4
        versionName "2.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        
        // Supabase credentials - anon keys are safe to be public (included in APK)
        // Can override via local.properties for different environments
        def localProperties = new Properties()
        def localPropertiesFile = rootProject.file("local.properties")
        if (localPropertiesFile.exists()) {
            localPropertiesFile.withInputStream { localProperties.load(it) }
        }
        
        // Default Supabase credentials (anon keys are public by design - safe in APK)
        def defaultSupabaseUrl = "https://mpudbsgszekwghohwcwf.supabase.co"
        def defaultSupabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1wdWRic2dzemVrd2dob2h3Y3dmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAwMTg4OTEsImV4cCI6MjA3NTU5NDg5MX0.3HbXbLlwHAYIgE7RCGMb-RpBnD-V760vGWYAn4RRVTw"
        
        // Use local.properties if set, otherwise use defaults (compiled into APK)
        buildConfigField "String", "SUPABASE_URL", "\"${localProperties.getProperty('supabase.url', defaultSupabaseUrl)}\""
        buildConfigField "String", "SUPABASE_ANON_KEY", "\"${localProperties.getProperty('supabase.anon.key', defaultSupabaseKey)}\""
        
        // BuildConfig fields
        buildConfigField "String", "APP_VERSION_NAME", "\"${versionName}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Use debug signing for release builds (for testing purposes)
            signingConfig signingConfigs.debug
        }
        debug {
            // Custom APK name for debug builds
            applicationIdSuffix ".debug"
        }
    }
    
    // Rename APK files after build
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def appName = "YouKids"
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            def buildType = variant.buildType.name
            
            // Format: YouKids-v1.0.0-debug.apk
            outputFileName = "${appName}-v${versionName}-${buildType}.apk"
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.0'
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    
    // ExoPlayer for video playback
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.1'
    implementation 'com.google.android.exoplayer:extension-okhttp:2.19.1'
    
    // Removed YouTube Android Player API â€“ app now plays only local videos via ExoPlayer
    
    // Coil for image loading + video frame extraction
    implementation 'io.coil-kt:coil-compose:2.5.0'
    implementation 'io.coil-kt:coil-video:2.5.0'
    
    // Gson for JSON parsing
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Retrofit for API calls
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Coroutines for async operations
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    
    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.7.5'
    
    // Supabase for backend analytics
    implementation platform('io.github.jan-tennert.supabase:bom:2.0.0')
    implementation 'io.github.jan-tennert.supabase:postgrest-kt'
    implementation 'io.ktor:ktor-client-android:2.3.7'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.10.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}
